apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keycloak.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
    app.kubernetes.io/component: keycloak
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ include "keycloak.fullname" . }}-headless
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: keycloak
  template:
    metadata:
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: keycloak
        {{ include "keycloak.db.fullname" . }}-client: "true"
    spec:
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      containers:
        - name: keycloak
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - dockerize
          args:
            - -stdout=/tmp/configurator.out
            - /opt/keycloak/bin/kc.sh
            - start
            - -Djgroups.dns.query=keycloak-headless.{{ .Release.Namespace }}.svc.cluster.local
            - --proxy=edge
          lifecycle:
            postStart:
              exec:
                command: ["sh", "-c", "/tf/tf.sh 2>&1 > /tmp/configurator.out"]
          env:
            {{- if .Values.ingress.host }}
            - name: KC_HOSTNAME
              value: {{ .Values.ingress.host }}
            {{- end }}
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.fullname" . }}
                  key: admin-password
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.db.fullname" . }}
                  key: password
            # - name: KEYCLOAK_CREATE_ADMIN_USER
            #   value: "true"
            - name: KEYCLOAK_ADMIN
              value: {{ .Values.adminUser }}
            - name: KC_DB_URL
              value: jdbc:postgresql://{{ include "keycloak.db.fullname" . }}:{{ .Values.db.primary.service.ports.postgresql }}/{{ .Values.db.auth.database }}
            - name: KC_DB_USERNAME
              value: {{ .Values.db.auth.username }}
            - name: KC_DB_URL_HOST
              value: {{ include "keycloak.db.fullname" . }}
            - name: KC_DB_URL_PORT
              value: {{ .Values.db.primary.service.ports.postgresql | quote }}
            - name: KC_DB_URL_DATABASE
              value: {{ .Values.db.auth.database }}
          envFrom:
            - secretRef:
                name: {{ include "keycloak.fullname" . }}-configurator
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /auth/health
              port: http
          startupProbe:
            httpGet:
              path: /auth/health
              port: http
            failureThreshold: 6
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
