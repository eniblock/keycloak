stages:
  - prepare
  - test
  - docker
  - helm

ci:
  stage: prepare
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:2.1
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - buildctl-daemonless.sh build
      --frontend dockerfile.v0
      --local context=ci
      --local dockerfile=ci
      --export-cache mode=max,type=registry,ref=$CI_REGISTRY_IMAGE/ci:buildcache,push=true
      --import-cache type=registry,ref=$CI_REGISTRY_IMAGE/ci:buildcache
      --output type=image,name=$CI_REGISTRY_IMAGE/ci:$CI_COMMIT_REF_SLUG,push=true
  only:
    changes:
      - ci/*

#k8s:
#  stage: test
#  image: $CI_REGISTRY_IMAGE/ci:$CI_COMMIT_REF_SLUG
#  services:
#    - docker:dind
#  variables:
#    DOCKER_HOST: "tcp://docker:2375"
#    # Improve performance with overlayfs.
#    DOCKER_DRIVER: overlay2
#  script:
#    - while ! nc -z docker 2375; do sleep 1; done
#    - k3d cluster create default --port 80:80@loadbalancer --port 443:443@loadbalancer
#    - helm repo add bitnami https://charts.bitnami.com/bitnami
#    - helm repo update
#    - kubectl create secret docker-registry gitlab-registry
#      --docker-server=$CI_REGISTRY
#      --docker-username=$CI_REGISTRY_USER
#      --docker-password=$CI_REGISTRY_PASSWORD
#    - helm install kc bitnami/keycloak
#      --set image.registry=$CI_REGISTRY
#      --set image.repository=$CI_PROJECT_PATH/keycloak
#      --set image.tag=$CI_COMMIT_REF_SLUG
#      --set image.pullSecrets={gitlab-registry}
#      --timeout 10m
#      --wait || (kubectl describe pod && false)
#    - helm list

sonarcloud-check:
  image: maven:3.6.3-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -f extensions
  only:
    - merge_requests
    - master
    - develop

helm-lint:
  stage: test
  image: registry.gitlab.com/xdev-tech/build/helm:2.1
  allow_failure: true
  script:
    - helm dependency update ./helm/keycloak
    - lint helm/keycloak --values helm/keycloak/values-dev.yaml

publish_docker:
  stage: docker
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:2.1
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_pipeline_id $CI_REGISTRY_IMAGE

publish_helm_oci:
  stage: helm
  image: registry.gitlab.com/xdev-tech/build/helm:2.1
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/keycloak
    - build $CI_REGISTRY_IMAGE/helm/keycloak ./helm/keycloak NO_PATCH

publish_helm:
  stage: helm
  image: registry.gitlab.com/xdev-tech/build/helm:2.1
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/keycloak
    - build_std ./helm/keycloak NO_PATCH
